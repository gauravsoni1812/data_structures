https://practice.geeksforgeeks.org/problems/find-the-number-of-islands/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=find_the_number_of_islands

  void bfs(int row, int col, vector<vector<char>>& grid, vector<vector<bool>>& visited) {
    int n = grid.size();
    int m = grid[0].size();

    queue<pair<int, int>> q;
    q.push({row, col});
    visited[row][col] = true;
    while (!q.empty()) {
        int i = q.front().first;
        int j = q.front().second;
        q.pop();
        int delr[] = {-1, 0, 1};
        int delc[] = {-1, 0, 1};
        for (int k = 0; k < 3; k++) {
            for (int l = 0; l < 3; l++) {
                int nrow = i + delr[k];
                int ncol = j + delc[l];
                if (nrow >= 0 && nrow < n && ncol >= 0 && ncol < m && !visited[nrow][ncol] && grid[nrow][ncol] == '1') {
                    visited[nrow][ncol] = true;
                    q.push({nrow, ncol});
                }
            }
        }
    }
}

int numIslands(vector<vector<char>>& grid) {
    int count = 0;
    int n = grid.size();
    int m = grid[0].size();
    vector<vector<bool>> visited(n, vector<bool>(m, false));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (grid[i][j] == '1' && !visited[i][j]) {
                count++;
                bfs(i, j, grid, visited);
            }
        }
    }
    return count;
}
