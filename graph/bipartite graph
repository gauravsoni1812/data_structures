https://practice.geeksforgeeks.org/problems/bipartite-graph/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=bipartite-graph

bool dfs(vector<int> adj[],int i,vector<int> &vis)
    {
        for(auto j:adj[i])
        {
            if(vis[j]==-1)
            {
                vis[j]=!vis[i];
                if(dfs(adj,j,vis)==false)
                return false;
            }
            else if(vis[i]==vis[j])
            {
                return 0;
            }
        }
        return 1;
    }
 
 
bool isBipartite(int V, vector<int>adj[]){
    vector<int> vis(V,-1);
    for(int i=0;i<V;i++)
    {
        if(vis[i]==-1)
        {
            vis[i]=0;
            if(dfs(adj,i,vis)==false) return false;
        }
    }
    
    return true;
}



BFS traversal

bool check(int start, int V, vector<int>adj[],vector<int>&color){
        color[start] = 0;
        queue<int>q;
        q.push(start);
        while(!q.empty()){
           int node = q.front();
           q.pop();
           for(auto j: adj[node]){
               if(color[j] == -1){
                   color[j] = !color[node];
                   q.push(j);
               }
               else if(color[j] == color[node]){
                   return false;
               }
           }
        }
        return true;
    }

    bool isBipartite(int V, vector<int>adj[]){
        // Code here
        vector<int>color(V,-1);
        for(int i=0;i<V;i++){
            if(color[i] == -1){
                if(!check(i,V,adj,color)){
                    return false;
                }
            }
        }
        return true;
    }

