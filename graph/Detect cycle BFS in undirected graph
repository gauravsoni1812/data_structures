https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=detect-cycle-in-an-undirected-graph

    bool bfs(int src, int n, vector<int> adj[] , vector<int> &visited)
{
    // Code here
    
    queue<pair<int, int>> q;
    q.push({src, -1});
    visited[src] = true;
    while (!q.empty())
    {
        int Node = q.front().first;
        int parent = q.front().second;
        q.pop();
        for (int i = 0; i < adj[Node].size(); i++)
        {
            if (!visited[adj[Node][i]])
            {   
                visited[adj[Node][i]]=true;
                q.push({adj[Node][i], Node});
            }
            else
            {
                if (parent != adj[Node][i])
                {
                    return true;
                }
            }
        }
    }
    return false;
}

bool isCycle(int n, vector<int> adj[]){
    vector<int> visited(n, false);
    for(int i=0;i<n;i++){
        if(!visited[i]){
           if(bfs(i,n,adj,visited)){
               return true;
           }
        }
    }
    return false;
}
