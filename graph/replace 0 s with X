https://practice.geeksforgeeks.org/problems/replace-os-with-xs0052/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=replace-os-with-xs

void bfs(int i, int j, vector<vector<char>>& mat, vector<vector<bool>>& visited)
{
    int n = mat.size();
    int m = mat[0].size();
    queue<pair<int, int>> q;
    q.push({i, j});
    visited[i][j] = true;
    while (!q.empty())
    {
        int row = q.front().first;
        int col = q.front().second;
        q.pop();
        int delr[4] = {-1, 1, 0, 0};
        int delc[4] = {0, 0, -1, 1};
        for (int k = 0; k < 4; k++)
        {
            int nrow = row + delr[k];
            int ncol = col + delc[k];
            if (nrow >= 0 && nrow < n && ncol >= 0 && ncol < m && mat[nrow][ncol] == 'O' && !visited[nrow][ncol])
            {
                visited[nrow][ncol] = true;
                q.push({nrow, ncol});
            }
        }
    }
}

vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)
{
    vector<vector<bool>> visited(n, vector<bool>(m, false));

    for (int i = 0; i < n; i++)
    {
        if (mat[i][0] == 'O' && !visited[i][0])
        {
            bfs(i, 0, mat, visited);
        }
        if (mat[i][m - 1] == 'O' && !visited[i][m - 1])
        {
            bfs(i, m - 1, mat, visited);
        }
    }
    for (int i = 0; i < m; i++)
    {
        if (mat[0][i] == 'O' && !visited[0][i])
        {
            bfs(0, i, mat, visited);
        }
        if (mat[n - 1][i] == 'O' && !visited[n - 1][i])
        {
            bfs(n - 1, i, mat, visited);
        }
    }
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            if (mat[i][j] == 'O' && !visited[i][j])
            {
                mat[i][j] = 'X';
            }
        }
    }
    return mat;
}
